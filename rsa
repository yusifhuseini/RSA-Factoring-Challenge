#!/usr/bin/python3


import math
from sys import argv


def polynomial(x, n):
    return (x**2 + 1) % n


def pollards_rho(n):
    x = 2
    y = 2
    d = 1
    while d == 1:
        x = int(polynomial(x, n))
        y = int(polynomial(polynomial(y, n), n))
        d = math.gcd(int(abs(x - y)), n)
    if d != n:          # program is not yet completed
        return d


def get_primes():
    with open(argv[1]) as f:
        for number in f:
            num = int(number)
            if num % 2 == 0:
                print("{:d}={}*{}".format(num, num // 2, 2))
            else:
                prime_factor1 = pollards_rho(num)
                prime_factor2 = int(num / prime_factor1)
                print("{}={}*{}".format(num, prime_factor1, prime_factor2))


if __name__ == "__main__":
    get_primes()
